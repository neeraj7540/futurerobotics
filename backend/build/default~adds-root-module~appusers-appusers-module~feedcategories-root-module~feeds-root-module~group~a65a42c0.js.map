{"version":3,"sources":["webpack:///./node_modules/ngx-ui-switch/ui-switch.es5.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgK;AAChG;AAClD;AACiC;;AAE/C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,4BAA4B,4DAAc;;AAE1C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B;AACA,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA,iBAAiB,0BAA0B,EAAE;AAC7C;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,ykBAAykB,qBAAqB,gHAAgH,uBAAuB;AACruB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,OAAO,oDAAM,8BAA8B,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAC3G,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,wBAAwB,OAAO,mDAAK,EAAE;AACtC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,oBAAoB,OAAO,0DAAY,gCAAgC;AACvE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB,mDAAmD;AACpE;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC;AACA;AACA,wBAAwB,0DAAW;AACnC;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;;AAEsE;AACtE","file":"default~adds-root-module~appusers-appusers-module~feedcategories-root-module~feeds-root-module~group~a65a42c0.js","sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, HostListener, Inject, InjectionToken, Input, NgModule, Optional, Output, forwardRef } from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar UI_SWITCH_OPTIONS = new InjectionToken('UI_SWITCH_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar UI_SWITCH_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    function () { return UiSwitchComponent; })),\n    multi: true,\n};\nvar UiSwitchComponent = /** @class */ (function () {\n    function UiSwitchComponent(config, cdr) {\n        if (config === void 0) { config = {}; }\n        this.cdr = cdr;\n        /**\n         * Emits changed value\n         */\n        this.change = new EventEmitter();\n        /**\n         * Emits DOM event\n         */\n        this.changeEvent = new EventEmitter();\n        /**\n         * Emits changed value\n         */\n        this.valueChange = new EventEmitter();\n        this.onTouchedCallback = (/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { });\n        this.onChangeCallback = (/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { });\n        this.size = config && config.size || 'medium';\n        this.color = config && config.color;\n        this.switchOffColor = config && config.switchOffColor;\n        this.switchColor = config && config.switchColor;\n        this.defaultBgColor = config && config.defaultBgColor;\n        this.defaultBoColor = config && config.defaultBoColor;\n        this.checkedLabel = config && config.checkedLabel;\n        this.uncheckedLabel = config && config.uncheckedLabel;\n        this.checkedTextColor = config && config.checkedTextColor;\n        this.uncheckedTextColor = config && config.uncheckedTextColor;\n    }\n    Object.defineProperty(UiSwitchComponent.prototype, \"checked\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._checked;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._checked = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UiSwitchComponent.prototype, \"disabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._disabled;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._disabled = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UiSwitchComponent.prototype, \"reverse\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._reverse;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._reverse = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UiSwitchComponent.prototype, \"loading\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._loading;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._loading = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} flag\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.getColor = /**\n     * @param {?=} flag\n     * @return {?}\n     */\n    function (flag) {\n        if (flag === void 0) { flag = ''; }\n        if (flag === 'borderColor') {\n            return this.defaultBoColor;\n        }\n        if (flag === 'switchColor') {\n            if (this.reverse) {\n                return !this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n            }\n            return this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n        }\n        if (flag === 'checkedTextColor') {\n            return this.reverse ? this.uncheckedTextColor : this.checkedTextColor;\n        }\n        if (flag === 'uncheckedTextColor') {\n            return this.reverse ? this.checkedTextColor : this.uncheckedTextColor;\n        }\n        if (this.reverse) {\n            return !this.checked ? this.color : this.defaultBgColor;\n        }\n        return this.checked ? this.color : this.defaultBgColor;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.onClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            return;\n        }\n        this.checked = !this.checked;\n        // Component events\n        this.change.emit(this.checked);\n        this.valueChange.emit(this.checked);\n        this.changeEvent.emit(event);\n        // value accessor callbacks\n        this.onChangeCallback(this.checked);\n        this.onTouchedCallback(this.checked);\n        this.cdr.markForCheck();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.onToggle = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        if (this.beforeChange) {\n            this._beforeChange = this.beforeChange.subscribe((/**\n             * @param {?} confirm\n             * @return {?}\n             */\n            function (confirm) {\n                if (confirm) {\n                    _this.onClick(event);\n                }\n            }));\n        }\n        else {\n            this.onClick(event);\n        }\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.writeValue = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        if (obj !== this.checked) {\n            this.checked = !!obj;\n        }\n        if (this.cdr) {\n            this.cdr.markForCheck();\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChangeCallback = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * @return {?}\n     */\n    UiSwitchComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._beforeChange) {\n            this._beforeChange.unsubscribe();\n        }\n    };\n    UiSwitchComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ui-switch',\n                    template: \"\\n    <span class=\\\"switch\\\"\\n    [class.checked]=\\\"checked\\\"\\n    [class.disabled]=\\\"disabled\\\"\\n    [class.loading]=\\\"loading\\\"\\n    [class.switch-large]=\\\"size === 'large'\\\"\\n    [class.switch-medium]=\\\"size === 'medium'\\\"\\n    [class.switch-small]=\\\"size === 'small'\\\"\\n    [style.background-color]=\\\"getColor()\\\"\\n    [style.border-color]=\\\"getColor('borderColor')\\\"\\n    >\\n    <span class=\\\"switch-pane\\\" *ngIf=\\\"checkedLabel || uncheckedLabel\\\">\\n      <span class=\\\"switch-label-checked\\\"\\n      [style.color]=\\\"getColor('checkedTextColor')\\\">{{ this.checkedLabel }}</span>\\n      <span class=\\\"switch-label-unchecked\\\"\\n      [style.color]=\\\"getColor('uncheckedTextColor')\\\">{{ this.uncheckedLabel }}</span>\\n    </span>\\n    <small [style.background]=\\\"getColor('switchColor')\\\">\\n      <ng-content></ng-content>\\n    </small>\\n    </span>\\n  \",\n                    providers: [UI_SWITCH_CONTROL_VALUE_ACCESSOR],\n                },] },\n    ];\n    /** @nocollapse */\n    UiSwitchComponent.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [UI_SWITCH_OPTIONS,] }, { type: Optional }] },\n        { type: ChangeDetectorRef }\n    ]; };\n    UiSwitchComponent.propDecorators = {\n        size: [{ type: Input }],\n        color: [{ type: Input }],\n        switchOffColor: [{ type: Input }],\n        switchColor: [{ type: Input }],\n        defaultBgColor: [{ type: Input }],\n        defaultBoColor: [{ type: Input }],\n        checkedLabel: [{ type: Input }],\n        uncheckedLabel: [{ type: Input }],\n        checkedTextColor: [{ type: Input }],\n        uncheckedTextColor: [{ type: Input }],\n        beforeChange: [{ type: Input }],\n        checked: [{ type: Input }],\n        disabled: [{ type: Input }],\n        reverse: [{ type: Input }],\n        loading: [{ type: Input }],\n        change: [{ type: Output }],\n        changeEvent: [{ type: Output }],\n        valueChange: [{ type: Output }],\n        onToggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n    };\n    return UiSwitchComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar UiSwitchModule = /** @class */ (function () {\n    function UiSwitchModule() {\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    UiSwitchModule.forRoot = /**\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        return {\n            ngModule: UiSwitchModule,\n            providers: [\n                { provide: UI_SWITCH_OPTIONS, useValue: config || {} }\n            ]\n        };\n    };\n    UiSwitchModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        UiSwitchComponent\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule\n                    ],\n                    exports: [\n                        FormsModule,\n                        UiSwitchComponent\n                    ]\n                },] },\n    ];\n    return UiSwitchModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UiSwitchComponent, UiSwitchModule, UI_SWITCH_OPTIONS as ɵa };\n//# sourceMappingURL=ui-switch.es5.js.map\n"],"sourceRoot":""}