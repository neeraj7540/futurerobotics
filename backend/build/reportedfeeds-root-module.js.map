{"version":3,"sources":["webpack:///./src/app/pages/reportedfeeds/root-routing.module.ts","webpack:///./src/app/pages/reportedfeeds/root.component.ts","webpack:///./src/app/pages/reportedfeeds/root.module.ts","webpack:///./src/app/pages/reportedfeeds/view/view.component.html","webpack:///./src/app/pages/reportedfeeds/view/view.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACR;AACO;AAGtD,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAc;QACzB,QAAQ,EAAE;YACR;gBACA,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,kEAAa;aACzB;SAAC;KAEH,CAAC,CAAC;AAMH;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACrBY;AAQ1C;IAAA;IACA,CAAC;IADY,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,2CAET;SACF,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACe;AACE;AACJ;AACA;AACS;AAC/D,6DAA6D;AACJ;AACY;AACrE,6EAA6E;AAC3B;AAEH;AACW;AAE1D,IAAM,UAAU,GAAG;IACjB,8DAAc;IACd,kEAAa;IACb,wEAAmB;CAEnB,CAAC;AAuBH;IAAA;IAA0B,CAAC;IAAd,UAAU;QArBtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,+DAAW;gBACX,sEAAiB;gBACjB,mEAAmB;gBAEnB,4DAAc,CAAC,OAAO,CAAC,EACtB,CAAC;aACH;YACD,YAAY,EACP,UAAU,QACd;YACD,SAAS,EAAE;gBACT,uEAAc;gBACd,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,6EAAe,EAAE,KAAK,EAAE,IAAI,EAAE;aAGtE;YAED,eAAe,EAAC,CAAE,wEAAmB,CAAE;SACzC,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5CvB,onBAAonB,gGAAgG,8EAA8E,0EAA0E,qIAAqI,8BAA8B,2EAA2E,wBAAwB,mBAAmB,2BAA2B,oBAAoB,yEAAyE,2BAA2B,aAAa,mX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCttC;AAC7B;AACA;AACiB;AAC1B;AACE;AACuB;AACK;AACjB;AAgBtD;IAiFE,uBACU,IAAgB,EAChB,MAAc,EACd,KAAqB,EACrB,YAAsB,EACtB,QAAiB,EAAS,SAAmB;QALvD,iBAOC;QANS,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAU;QACtB,aAAQ,GAAR,QAAQ,CAAS;QAAS,cAAS,GAAT,SAAS,CAAU;QApFvD,YAAO,GAAG,qEAAW,CAAC,OAAO,CAAC;QAC9B,cAAS,GAAG,qEAAW,CAAC,SAAS,CAAC;QAClC,aAAQ,GAAO,EAAE,CAAC;QAClB,eAAU,GAAG,EAAE,CAAC;QAChB,iBAAY,GAAG,EAAE,CAAC;QAIlB,qBAAgB,GAAC,EAAE,CAAC;QACpB,aAAQ,GAAG;YACT,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE;gBACP,WAAW,EAAC,kBAAkB;gBAC9B,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAC,IAAI;gBACT,GAAG,EAAC,KAAK;gBACT,MAAM,EAAC,KAAK;aACb;YAED,GAAG,EAAE;gBACH,gBAAgB,EAAE,2BAA2B;gBAC7C,mBAAmB,EAAE,8BAA8B;gBACnD,mBAAmB,EAAE,0BAA0B;aAChD;YAED,IAAI,EAAE;gBACJ,iBAAiB,EAAE,yBAAyB;gBAC5C,iBAAiB,EAAE,8BAA8B;gBACjD,mBAAmB,EAAE,0BAA0B;aAChD;YACD,MAAM,EAAE;gBACN,mBAAmB,EAAE,0BAA0B;gBAC/C,aAAa,EAAE,IAAI;aACpB;YAED,MAAM,EAAG,CAAC;oBACR,IAAI,EAAG,QAAQ;oBACf,KAAK,EAAG,0BAA0B;iBACnC,CAAC;YAEF,OAAO,EAAE;gBAGP,KAAK,EAAE;oBACL,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,MAAM;oBACZ,MAAM,EAAE,KAAK;oBACb,oBAAoB,EAAE,UAAC,KAAa,IAAK,sCAA0B,KAAI,CAAC,SAAS,GAAG,KAAK,UAAM,EAAtD,CAAsD;iBAChG;gBAED,WAAW,EAAE;oBACX,KAAK,EAAE,kBAAkB;oBACzB,IAAI,EAAE,QAAQ;iBACf;gBAEA,OAAO,EAAE;oBACP,KAAK,EAAE,eAAe;oBACtB,IAAI,EAAE,QAAQ;iBAChB;gBAGD,UAAU,EAAC;oBACT,KAAK,EAAE,QAAQ;oBACf,IAAI,EAAE,QAAQ;oBACd,eAAe,EAAE,mBAAmB;oBACpC,uBAAuB,YAAC,QAAQ;wBAC9B,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,aAAG;wBAC3B,CAAC,CAAC,CAAC;oBACL,CAAC;iBACF;aAEF;SAGF,CAAC;QACF,WAAM,GAAoB,IAAI,+DAAe,EAAE,CAAC;IAWhD,CAAC;IACD,gCAAQ,GAAR;QACA,wBAAwB;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IAEnB,CAAC;IAGD,mCAAW,GAAX;QAAA,iBAuBC;QArBC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,CAAC,SAAS,CACzD,UAAC,QAAa;YAGd,4CAA4C;YAE1C,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAO;gBAE3B,OAAO,CAAC,OAAO,CAAC,GAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;gBACpC,OAAO,CAAC,aAAa,CAAC,GAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;gBAChD,OAAO,CAAC,SAAS,CAAC,GAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACnD,8CAA8C;gBAC9C,OAAO,CAAC,YAAY,CAAC,GAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;YAE5C,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC,EACD,UAAC,KAAK;QACV,CAAC,CAAC,CAAC;IAGH,CAAC;IAID,gCAAQ,GAAR,UAAS,KAAK;QACZ,sDAAsD;QACtD,8EAA8E;QAC9E,kBAAkB;QAClB,6BAA6B;QAC7B,iEAAiE;QACjE,uFAAuF;QACvF,mCAAmC;QACnC,YAAY;QACZ,UAAU;QACV,IAAI;IACN,CAAC;IAED,oCAAY,GAAZ,UAAa,IAAI;QAAjB,iBA2BC;QAzBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,UAAU,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAEhC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAG,UAAU,IAAE,GAAG,EAAC;YACjB,UAAU,GAAG,GAAG,CAAC;SAClB;aAAI;YACF,UAAU,GAAG,GAAG,CAAC;SACnB;QAED,IAAI,GAAG;YACL,QAAQ,EAAC,UAAU;YACnB,QAAQ,EAAC,MAAM;SAChB;QACI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,sBAAsB,EAAC,IAAI,CAAC,CAAC,SAAS,CACpE,UAAC,QAAa;YAEZ,IAAI,QAAQ,CAAC,OAAO,IAAI,0BAA0B,EAAE;gBAClD,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,oFAAa,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACtE,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,EACD,UAAC,KAAK;QACP,CAAC,CAAC,CAAC;IAER,CAAC;IAED,mCAAW,GAAX,UAAY,IAAI,EAAE,KAAK;QAAvB,iBAeC;QAbA,sBAAsB;QACtB,iCAAiC;QACjC,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC9E,UAAC,QAAa;YACV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;QAElC,CAAC,EACD,UAAC,KAAK;QACP,CAAC,CAAC,CAAC;IAEN,CAAC;IApLU,aAAa;QATzB,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;YAE5B,MAAM,EAAE,CAAC,oEAIR,CAAC;SACH,CAAC;yCAmFgB,+DAAU;YACR,sDAAM;YACP,uEAAc;YACP,mEAAQ;YACb,wDAAQ,EAAoB,mEAAQ;OAtF5C,aAAa,CAuLzB;IAAD,oBAAC;CAAA;AAvLyB;AAkM1B;IAQE,6BAAoB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAF/B,SAAI,GAAsB,IAAI,0DAAY,EAAE,CAAC;IAIvD,CAAC;IAED,sCAAQ,GAAR;QAEI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;IAC3D,CAAC;IAED,qCAAO,GAAP;QACC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAhBQ;QAAR,2DAAK,EAAE;;sDAAwB;IACvB;QAAR,2DAAK,EAAE;;wDAAc;IAEZ;QAAT,4DAAM,EAAE;kCAAO,0DAAY;qDAA2B;IAN5C,mBAAmB;QAR/B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,+KAIT;SACF,CAAC;yCAS4B,aAAa;OAR9B,mBAAmB,CAoB/B;IAAD,0BAAC;CAAA;AApB+B","file":"reportedfeeds-root-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {RootComponents} from './root.component'\r\nimport { ViewComponent } from './view/view.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: RootComponents,\r\n  children: [\r\n    {\r\n    path: 'view',\r\n    component: ViewComponent,\r\n  }],\r\n  \r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RootRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-users',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RootComponents {\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { RootRoutingModule } from './root-routing.module';\r\nimport { ViewComponent } from './view/view.component';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ToastrMessages } from '../../helpers/toaster.service';\r\n// import { MapsModule } from '../../pages/maps/maps.module';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from '../../interceptor/auth.interceptor';\r\n// import{SearchComponent} from '../maps/search-map/search/search.component';\r\nimport { RootComponents } from './root.component';\r\n\r\nimport { UiSwitchModule } from 'ngx-ui-switch';\r\nimport {ButtonViewComponent} from './view/view.component';\r\n \r\nconst components = [\r\n  RootComponents,\r\n  ViewComponent,\r\n  ButtonViewComponent\r\n\r\n ];\r\n\r\n@NgModule({\r\n  imports: [\r\n    ThemeModule,\r\n    RootRoutingModule,\r\n    Ng2SmartTableModule,\r\n\r\n    UiSwitchModule.forRoot({   \r\n    })\r\n  ],\r\n  declarations: [\r\n    ...components,\r\n  ],\r\n  providers: [\r\n    ToastrMessages,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  \r\n  \r\n   ],\r\n   \r\n   entryComponents:[ ButtonViewComponent ]\r\n})\r\nexport class RootModule { }\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>\\r\\nReported Feeds\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"viewUsrList($event,groupsModel)\\\"\\r\\n      (delete)=\\\"onDelete($event)\\\">\\r\\n    </ng2-smart-table>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\\r\\n<ng-template #groupsModel let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Reported by listed users</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div> \\r\\n  <div class=\\\"modal-body\\\" style=\\\"overflow-y: scroll;height: 450px\\\">\\r\\n    <ul class=\\\"list-group\\\" style=\\\"list-style-type:none;\\\" *ngIf=\\\"allUsers.length>0\\\">\\r\\n     <li *ngFor=\\\"let item of allUsers; let i = index\\\">\\r\\n      <div class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\r\\n        <img src=\\\"{{imagesUrl+item.appuser.image}}\\\" width=\\\"30\\\" height=\\\"30\\\"  alt=\\\"\\\">\\r\\n       <div style=\\\"width: 60%;\\\">\\r\\n        <span> {{item.appuser.name}}</span>\\r\\n       <span> {{item.appuser.email}}</span>\\r\\n      </div>\\r\\n     \\r\\n\\r\\n        <div  style=\\\"width: 30%;\\\" >\\r\\n          <span> {{item.reason}}</span>\\r\\n          <!-- <ui-switch [checked]=\\\"item.status\\\" (valueChange)=\\\"modifyGroupAccess(item,$event)\\\"></ui-switch> -->\\r\\n      </div>\\r\\n    </div>  \\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\"","import { map } from 'rxjs/operators';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ToastrMessages } from '../../../helpers/toaster.service';\r\nimport { NbToastStatus } from '@nebular/theme/components/toastr/model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { element } from '@angular/core/src/render3';\r\nimport { UiSwitchModule } from 'ngx-ui-switch';\r\nimport { ViewCell } from 'ng2-smart-table';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-sponsersview',\r\n  templateUrl: './view.component.html',\r\n  styles: [`\r\n    nb-card {\r\n      transform: translate3d(0, 0, 0);\r\n    }\r\n  `],\r\n})\r\nexport class ViewComponent implements OnInit {\r\n\r\n  baseUrl = environment.baseUrl;\r\n  imagesUrl = environment.imagesUrl;\r\n  allUsers:any = [];\r\n  userGroups = [];\r\n  dropdownList = [];\r\n  selectedItems:any;\r\n\r\n  selectedUserId:any;\r\n  selectedUserName=\"\";\r\n  settings = {\r\n    mode: 'external',\r\n    actions: {\r\n      columnTitle:\"Reportd by users\",\r\n      position: 'right', // left|right\r\n      edit:true,\r\n      add:false,\r\n      delete:false\r\n    },\r\n\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-person\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-list\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n\r\n    custom : [{\r\n      name : \"groups\",\r\n      title : '<i class=\"nb-trash\"></i>'\r\n    }]\r\n    ,   \r\n    columns: {\r\n\r\n\r\n      image: {\r\n        title: 'Feed Image',\r\n        type: 'html',\r\n        filter: false,\r\n        valuePrepareFunction: (image: string) => `<img width=\"30px\" src=\"${this.imagesUrl}${image}\" />`,\r\n      },\r\n\r\n      description: {\r\n        title: 'Feed Description',\r\n        type: 'string',\r\n      }\r\n      ,\r\n       feedCat: {\r\n         title: 'Feed Category',\r\n         type: 'string',\r\n      },\r\n\r\n      \r\n      feedStatus:{\r\n        title: 'Action',\r\n        type: 'custom',\r\n        renderComponent: ButtonViewComponent,\r\n        onComponentInitFunction(instance) {\r\n          instance.save.subscribe(row => {\r\n          });\r\n        }\r\n      },\r\n     \r\n    },\r\n\r\n\r\n  };\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n\r\n\r\n  constructor( \r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private toast: ToastrMessages,\r\n    private modalService: NgbModal,\r\n    private datePipe:DatePipe,private _NgbModal: NgbModal) { \r\n    \r\n  }\r\n  ngOnInit() {\r\n  //  this.getAllGroups();\r\n  this.getAllUsers();\r\n   \r\n  }\r\n\r\n\r\n  getAllUsers(){\r\n\r\n    this.http.get(this.baseUrl + 'api/reportedfeeds').subscribe(\r\n      (response: any) => {\r\n\r\n\r\n      // response.body console.log(response.body);\r\n          \r\n        response.body.forEach(element => {\r\n\r\n          element['image']=element.feed.image;\r\n          element['description']=element.feed.description;\r\n          element['feedCat']=element.feed.feedscategory.name;\r\n          // element['userEmail']=element.appuser.email;\r\n          element['feedStatus']=element.feed.status;\r\n\r\n        });\r\n        this.source.load(response.body);\r\n      },\r\n      (error) => {\r\n  });    \r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  onDelete(event): void {\r\n    // if (confirm('Are you sure to delete this user?')) {\r\n    //   this.http.delete(this.baseUrl + 'admin/user/' + event.data._id+\"/delete\")\r\n    //     .subscribe(\r\n    //       (response: any) => {\r\n    //         if (response.message == 'User deleted successfully') {\r\n    //              this.toast.showToast(NbToastStatus.SUCCESS, 'Users', response.message);\r\n    //              this.getAllUsers();\r\n    //         }\r\n    //     });\r\n    // }\r\n  }\r\n\r\n  statusChange(data){\r\n    \r\n    console.log(data);\r\n    var itemStatus=data.feed.status;\r\n\r\n    let itemId = data.feedId;\r\n    if(itemStatus=='0'){\r\n      itemStatus = '1';\r\n    }else{\r\n       itemStatus = '0';\r\n    }\r\n\r\n    data = {\r\n      \"status\":itemStatus,\r\n      \"feedId\":itemId\r\n    }\r\n         this.http.put(this.baseUrl + 'api/feedstatuschange',data).subscribe(\r\n        (response: any) => {\r\n\r\n          if (response.message == 'Status has been updated!') {\r\n            this.toast.showToast(NbToastStatus.SUCCESS, 'Feed', response.message);\r\n            this.getAllUsers();\r\n          }\r\n        },\r\n        (error) => {\r\n       });\r\n\r\n  }\r\n\r\n  viewUsrList(item, model){\r\n\r\n   // console.log(item); \r\n   //private modalService: NgbModal,\r\n   this.allUsers=[];\r\n   this.modalService.open(model,{ size: 'lg', backdrop: 'static' });\r\n    this.http.get(this.baseUrl + 'api/feedreporterlist/'+item.data.feedId).subscribe(\r\n      (response: any) => {\r\n          console.log(response);\r\n          this.allUsers = response.body;\r\n       \r\n      },\r\n      (error) => {\r\n     });\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'button-view',\r\n  template: `\r\n    <button (click)=\"onClick()\" *ngIf=\"renderValue=='0'\">Enable Feed</button>\r\n    <button (click)=\"onClick()\" *ngIf=\"renderValue=='1'\">Disable Feed</button>\r\n\r\n  `,\r\n})\r\nexport class ButtonViewComponent implements ViewCell, OnInit {\r\n  renderValue: string;\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() save: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private vewcomp:ViewComponent){\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n      this.renderValue = this.value.toString().toUpperCase();\r\n  }\r\n\r\n  onClick() {\r\n   this.vewcomp.statusChange(this.rowData);\r\n  }\r\n}"],"sourceRoot":""}