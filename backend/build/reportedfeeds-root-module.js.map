{"version":3,"sources":["webpack:///./src/app/pages/reportedfeeds/root-routing.module.ts","webpack:///./src/app/pages/reportedfeeds/root.component.ts","webpack:///./src/app/pages/reportedfeeds/root.module.ts","webpack:///./src/app/pages/reportedfeeds/view/view.component.html","webpack:///./src/app/pages/reportedfeeds/view/view.component.ts"],"names":[],"mappings":"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","file":"reportedfeeds-root-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {RootComponents} from './root.component'\nimport { ViewComponent } from './view/view.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: RootComponents,\n  children: [\n    {\n    path: 'view',\n    component: ViewComponent,\n  }],\n  \n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RootRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-users',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class RootComponents {\n}\n","\nimport { NgModule } from '@angular/core';\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { RootRoutingModule } from './root-routing.module';\nimport { ViewComponent } from './view/view.component';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { ToastrMessages } from '../../helpers/toaster.service';\n// import { MapsModule } from '../../pages/maps/maps.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from '../../interceptor/auth.interceptor';\n// import{SearchComponent} from '../maps/search-map/search/search.component';\nimport { RootComponents } from './root.component';\n\nimport { UiSwitchModule } from 'ngx-ui-switch';\nimport {ButtonViewComponent} from './view/view.component';\n \nconst components = [\n  RootComponents,\n  ViewComponent,\n  ButtonViewComponent\n\n ];\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    RootRoutingModule,\n    Ng2SmartTableModule,\n\n    UiSwitchModule.forRoot({   \n    })\n  ],\n  declarations: [\n    ...components,\n  ],\n  providers: [\n    ToastrMessages,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  \n  \n   ],\n   \n   entryComponents:[ ButtonViewComponent ]\n})\nexport class RootModule { }\n","module.exports = \"<nb-card>\\n  <nb-card-header>\\nReported Feeds\\n  </nb-card-header>\\n  <nb-card-body>\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"viewUsrList($event,groupsModel)\\\"\\n      (delete)=\\\"onDelete($event)\\\">\\n    </ng2-smart-table>\\n  </nb-card-body>\\n</nb-card>\\n\\n<ng-template #groupsModel let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Reported by listed users</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div> \\n  <div class=\\\"modal-body\\\" style=\\\"overflow-y: scroll;height: 450px\\\">\\n    <ul class=\\\"list-group\\\" style=\\\"list-style-type:none;\\\" *ngIf=\\\"allUsers.length>0\\\">\\n     <li *ngFor=\\\"let item of allUsers; let i = index\\\">\\n      <div class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n        <img src=\\\"{{imagesUrl+item.appuser.image}}\\\" width=\\\"30\\\" height=\\\"30\\\"  alt=\\\"\\\">\\n       <div style=\\\"width: 60%;\\\">\\n        <span> {{item.appuser.name}}</span>\\n       <span> {{item.appuser.email}}</span>\\n      </div>\\n     \\n\\n        <div  style=\\\"width: 30%;\\\" >\\n          <span> {{item.reason}}</span>\\n          <!-- <ui-switch [checked]=\\\"item.status\\\" (valueChange)=\\\"modifyGroupAccess(item,$event)\\\"></ui-switch> -->\\n      </div>\\n    </div>  \\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\"","import { map } from 'rxjs/operators';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrMessages } from '../../../helpers/toaster.service';\nimport { NbToastStatus } from '@nebular/theme/components/toastr/model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { element } from '@angular/core/src/render3';\nimport { UiSwitchModule } from 'ngx-ui-switch';\nimport { ViewCell } from 'ng2-smart-table';\n\n\n@Component({\n  selector: 'ngx-sponsersview',\n  templateUrl: './view.component.html',\n  styles: [`\n    nb-card {\n      transform: translate3d(0, 0, 0);\n    }\n  `],\n})\nexport class ViewComponent implements OnInit {\n\n  baseUrl = environment.baseUrl;\n  imagesUrl = environment.imagesUrl;\n  allUsers:any = [];\n  userGroups = [];\n  dropdownList = [];\n  selectedItems:any;\n\n  selectedUserId:any;\n  selectedUserName=\"\";\n  settings = {\n    mode: 'external',\n    actions: {\n      columnTitle:\"Reportd by users\",\n      position: 'right', // left|right\n      edit:true,\n      add:false,\n      delete:false\n    },\n\n    add: {\n      addButtonContent: '<i class=\"nb-person\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n\n    edit: {\n      editButtonContent: '<i class=\"nb-list\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n\n    custom : [{\n      name : \"groups\",\n      title : '<i class=\"nb-trash\"></i>'\n    }]\n    ,   \n    columns: {\n\n\n      image: {\n        title: 'Feed Image',\n        type: 'html',\n        filter: false,\n        valuePrepareFunction: (image: string) => `<img width=\"30px\" src=\"${this.imagesUrl}${image}\" />`,\n      },\n\n      description: {\n        title: 'Feed Description',\n        type: 'string',\n      }\n      ,\n       feedCat: {\n         title: 'Feed Category',\n         type: 'string',\n      },\n\n      \n      feedStatus:{\n        title: 'Action',\n        type: 'custom',\n        renderComponent: ButtonViewComponent,\n        onComponentInitFunction(instance) {\n          instance.save.subscribe(row => {\n          });\n        }\n      },\n     \n    },\n\n\n  };\n  source: LocalDataSource = new LocalDataSource();\n\n\n\n  constructor( \n    private http: HttpClient,\n    private router: Router,\n    private toast: ToastrMessages,\n    private modalService: NgbModal,\n    private datePipe:DatePipe,private _NgbModal: NgbModal) { \n    \n  }\n  ngOnInit() {\n  //  this.getAllGroups();\n  this.getAllUsers();\n   \n  }\n\n\n  getAllUsers(){\n\n    this.http.get(this.baseUrl + 'api/reportedfeeds').subscribe(\n      (response: any) => {\n\n\n      // response.body console.log(response.body);\n          \n        response.body.forEach(element => {\n\n          element['image']=element.feed.image;\n          element['description']=element.feed.description;\n          element['feedCat']=element.feed.feedscategory.name;\n          // element['userEmail']=element.appuser.email;\n          element['feedStatus']=element.feed.status;\n\n        });\n        this.source.load(response.body);\n      },\n      (error) => {\n  });    \n\n\n  }\n\n\n\n  onDelete(event): void {\n    // if (confirm('Are you sure to delete this user?')) {\n    //   this.http.delete(this.baseUrl + 'admin/user/' + event.data._id+\"/delete\")\n    //     .subscribe(\n    //       (response: any) => {\n    //         if (response.message == 'User deleted successfully') {\n    //              this.toast.showToast(NbToastStatus.SUCCESS, 'Users', response.message);\n    //              this.getAllUsers();\n    //         }\n    //     });\n    // }\n  }\n\n  statusChange(data){\n    \n    console.log(data);\n    var itemStatus=data.feed.status;\n\n    let itemId = data.feedId;\n    if(itemStatus=='0'){\n      itemStatus = '1';\n    }else{\n       itemStatus = '0';\n    }\n\n    data = {\n      \"status\":itemStatus,\n      \"feedId\":itemId\n    }\n         this.http.put(this.baseUrl + 'api/feedstatuschange',data).subscribe(\n        (response: any) => {\n\n          if (response.message == 'Status has been updated!') {\n            this.toast.showToast(NbToastStatus.SUCCESS, 'Feed', response.message);\n            this.getAllUsers();\n          }\n        },\n        (error) => {\n       });\n\n  }\n\n  viewUsrList(item, model){\n\n   // console.log(item); \n   //private modalService: NgbModal,\n   this.allUsers=[];\n   this.modalService.open(model,{ size: 'lg', backdrop: 'static' });\n    this.http.get(this.baseUrl + 'api/feedreporterlist/'+item.data.feedId).subscribe(\n      (response: any) => {\n          console.log(response);\n          this.allUsers = response.body;\n       \n      },\n      (error) => {\n     });\n\n  }\n\n\n}\n\n\n@Component({\n  selector: 'button-view',\n  template: `\n    <button (click)=\"onClick()\" *ngIf=\"renderValue=='0'\">Enable Feed</button>\n    <button (click)=\"onClick()\" *ngIf=\"renderValue=='1'\">Disable Feed</button>\n\n  `,\n})\nexport class ButtonViewComponent implements ViewCell, OnInit {\n  renderValue: string;\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  @Output() save: EventEmitter<any> = new EventEmitter();\n\n  constructor(private vewcomp:ViewComponent){\n\n  }\n\n  ngOnInit() {\n\n      this.renderValue = this.value.toString().toUpperCase();\n  }\n\n  onClick() {\n   this.vewcomp.statusChange(this.rowData);\n  }\n}"],"sourceRoot":""}